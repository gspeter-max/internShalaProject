
research_task:
  agent: Researcher
  description: >
    Mission Briefing for the Director of Digital Intelligence ('Oracle'):
    Your primary objective is to conduct a web-based intelligence gathering
    operation on the subject: '{topic}'. You are authorized to use the
    `SerperDevTool` to its full extent. Your focus is on high-signal, factual
    data from the public internet. Avoid all speculative or unverified sources.
  expected_output: >
    A comprehensive, structured intelligence report. The report must contain a
    bulleted list of key findings, each supported by verifiable data points and a
    direct URL to the primary source. This is a fact-finding mission; deliver
    only the facts.

summary_writer_task:
  agent: SummaryWriter
  description: >
    Mission Briefing for the Chief Strategy Narrator ('Echo'):
    You will receive the raw web intelligence report from 'Oracle'. Your mission is
    to distill this data into a high-impact strategic narrative. The final brief
    must be concise, compelling, and immediately actionable for a senior
    decision-maker. Focus on the 'so what' of the information.
  expected_output: >
    A polished, executive-ready Markdown report. The report must begin with a
    single, powerful title. The body must consist of 2-4 critical insights
    presented as a bulleted list. The language should be decisive and strategic.
  dependencies: [research_task]


visualization_task:
  agent: Visualizer # Corrected agent name to match your crew.py
  description: >
    Mission Briefing for the Cybernetic Forensics & Visualization Specialist ('Vision'):
    Your directive for '{topic}' is a two-phase operation.
    Phase 1 (INVESTIGATE): First, determine if system-level data is needed to supplement
    the web research. If so, formulate and execute the necessary shell commands using your
    `PromptToTerminalCommandTool` and `TerminalExecution` tools.
    Phase 2 (VISUALIZE): Synthesize your findings (or the summary from 'Echo')
    into a powerful visual concept. Craft an expert-level prompt for the
    `ImageGenerationTool` and execute it to produce 'image.png'.
  expected_output: >
    A mission success confirmation string. The string must explicitly state that
    the image 'image.png' has been successfully generated and saved to disk,
    and is now ready for dispatch by the 'Relay' system.
  dependencies: [summary_writer_task]
  async_execution: true

translation_task:
  agent: translator
  description: >
    Mission Briefing for the Diplomatic Corps Linguist ('Babel'):
    Your objective is to perform a full linguistic and cultural adaptation of the
    strategic narrative on '{topic}' into '{language}'. The final translated text
    must be flawless and ready for immediate publication or diplomatic briefing.
    Maintain the authority and nuance of the original source.
  expected_output: >
    The complete, translated strategic narrative in Markdown format. The output
    must be free of any grammatical errors and must read as if it were originally
    authored by a native speaker of '{language}'.
  dependencies: [summary_writer_task]
  async_execution: true



 
send_summary_task:
  agent: telegram_sender
  description: >
    Mission Briefing for the Automated Dispatch System ('Relay'):
    Your directive is to execute a TEXT payload delivery. You will receive the final
    strategic narrative (either original or translated). You must use the
    `SendTextInTelegramChannel` tool to transmit this payload to the designated
    channel.
  expected_output: >
    A delivery confirmation report. The report must contain the raw API response
    string from the Telegram service, confirming the status (e.g., HTTP 200 OK)
    of the text message transmission.
  dependencies: [summary_writer_task, translation_task]


send_image_task:
  agent: telegram_sender
  description: >
    this is for sending image to the telegram channel . You must use the
    `SendImageInTelegramChannel` tool to transmit this visual asset to the
    designated channel.
  expected_output: >
    A delivery confirmation report. The report must contain the raw API response
    string from the Telegram service, confirming the status (e.g., HTTP 200 OK)
    of the image transmission.
  dependencies: [visualization_task]

